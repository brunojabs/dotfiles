vim.keymap.set("n", "<C-\\>", vim.cmd.Lex)
vim.keymap.set("n", "<tab>", vim.cmd.bn)
vim.keymap.set("n", "<S-tab>", vim.cmd.bp)
vim.keymap.set({ "n", "v" }, "<leader>y", [["+y]])
vim.keymap.set({ "n", "v" }, "<leader>P", [["+p<CR>]])
vim.keymap.set("v", "J", ":m '>+1<CR>gv=gv")
vim.keymap.set("v", "K", ":m '<-2<CR>gv=gv")
vim.keymap.set("n", "<leader>bd", ":bd<CR>")
vim.keymap.set("n", "<leader>bD", ":bd!<CR>")
vim.keymap.set("n", "<M-q>", ":bd<CR>")
vim.keymap.set("n", "<leader>c", ":Cargo c<CR>")
vim.keymap.set("n", "<leader>C", ":Cargo clippy<CR>")
vim.keymap.set("n", "<C-f>", "<cmd>silent !tmux neww tmux-sessionizer<CR>")
vim.keymap.set("n", "<leader>k", "<cmd>lnext<CR>zz")
vim.keymap.set("n", "<leader>j", "<cmd>lprev<CR>zz")
vim.keymap.set("n", "<C-s>", ":w<CiR>")
vim.keymap.set("n", "<leader>q", ":q<CR>")
vim.keymap.set("n", "<leader>!q", ":q!<CR>")
vim.keymap.set("n", "<leader>w", ":w<CR>")
vim.keymap.set("n", "]q", ":cn<CR>")
vim.keymap.set("n", "[q", ":cp<CR>")

vim.api.nvim_create_autocmd('LspAttach', {
  desc = 'LSP actions',
  callback = function(event)
    local opts = { buffer = event.buf }

    local builtin = require('telescope.builtin')
    vim.keymap.set("n", "gd", vim.lsp.buf.definition, opts)
    vim.keymap.set("n", "K", vim.lsp.buf.hover, opts)
    vim.keymap.set("n", "<leader>vws", vim.lsp.buf.workspace_symbol, opts)
    vim.keymap.set("n", "<leader>vd", vim.diagnostic.open_float, opts)
    vim.keymap.set("n", "]e", vim.diagnostic.goto_next, opts)
    vim.keymap.set("n", "[e", vim.diagnostic.goto_prev, opts)
    vim.keymap.set("n", "<leader><space>", vim.lsp.buf.code_action, opts)
    vim.keymap.set("v", "<leader><space>", vim.lsp.buf.code_action, opts)
    vim.keymap.set("n", "gh", builtin.lsp_references, opts)
    vim.keymap.set("n", "gr", vim.lsp.buf.rename, opts)
    vim.keymap.set("i", "<C-space>", vim.lsp.buf.signature_help, opts)
  end
})
